{"version":3,"sources":["modules/ResponsiveTest/viewports.js","modules/ResponsiveTest/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["viewports","selector","name","width","height","ResponsiveTest","state","url","setUrlToIframe","selectedViewport","iframeRef","createRef","handleChange","event","preventDefault","value","target","setState","handleSubmit","ReactGA","category","action","handleViewportChange","this","viewportValue","find","item","className","htmlFor","id","type","placeholder","onChange","onClick","map","index","key","title","ref","src","frameBorder","Component","Header","href","rel","Footer","Date","getFullYear","App","useEffect","initialize","pageview","window","location","pathname","search","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1f03e969.chunk.js","sourcesContent":["export const viewports = [\r\n  {\r\n    selector: \"1440x900\",\r\n    name: \"Laptop with HiDPI Screen\",\r\n    width: \"1440\",\r\n    height: \"900\",\r\n  },\r\n  {\r\n    selector: \"1280x800\",\r\n    name: \"Laptop with MiDPI Screen\",\r\n    width: \"1280\",\r\n    height: \"800\",\r\n  },\r\n  {\r\n    selector: \"1024x1366\",\r\n    name: \"iPad Pro\",\r\n    width: \"1024\",\r\n    height: \"1366\",\r\n  },\r\n  {\r\n    selector: \"768x1024\",\r\n    name: \"iPad Portrait\",\r\n    width: \"768\",\r\n    height: \"1024\",\r\n  },\r\n  {\r\n    selector: \"1024x768\",\r\n    name: \"iPad Landscape\",\r\n    width: \"1024\",\r\n    height: \"768\",\r\n  },\r\n  {\r\n    selector: \"360x640\",\r\n    name: \"Moto G4\",\r\n    width: \"360\",\r\n    height: \"640\",\r\n  },\r\n  {\r\n    selector: \"360x640\",\r\n    name: \"Galaxy S5\",\r\n    width: \"360\",\r\n    height: \"640\",\r\n  },\r\n  {\r\n    selector: \"411x731\",\r\n    name: \"Pixel 2\",\r\n    width: \"411\",\r\n    height: \"731\",\r\n  },\r\n  {\r\n    selector: \"411x823\",\r\n    name: \"Pixel 2XL\",\r\n    width: \"411\",\r\n    height: \"823\",\r\n  },\r\n  {\r\n    selector: \"320x568\",\r\n    name: \"iPhone 5/SE\",\r\n    width: \"320\",\r\n    height: \"568\",\r\n  },\r\n  {\r\n    selector: \"375x667\",\r\n    name: \"iPhone 6/7/8\",\r\n    width: \"375\",\r\n    height: \"667\",\r\n  },\r\n  {\r\n    selector: \"414x736\",\r\n    name: \"iPhone 6/7/8 Plus\",\r\n    width: \"414\",\r\n    height: \"736\",\r\n  },\r\n  {\r\n    selector: \"375x812\",\r\n    name: \"iPhone X\",\r\n    width: \"375\",\r\n    height: \"812\",\r\n  },\r\n]\r\n","import React, { Component, createRef } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { viewports } from \"./viewports\";\r\nimport \"./responsiveTest.css\";\r\n\r\nexport default class ResponsiveTest extends Component {\r\n  state = {\r\n    url: \"\",\r\n    setUrlToIframe: null,\r\n    selectedViewport: \"1280x800\",\r\n  };\r\n\r\n  iframeRef = createRef(null);\r\n\r\n  handleChange = (event) => {\r\n    event.preventDefault();\r\n    const { value } = event.target;\r\n    this.setState({ url: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ setUrlToIframe: this.state.url });\r\n    ReactGA.event({\r\n      category: \"click\",\r\n      action: \"Inspect Clicked\",\r\n    });\r\n  };\r\n\r\n  handleViewportChange = (event) => {\r\n    const { value } = event.target;\r\n    this.setState({ selectedViewport: value });\r\n  };\r\n\r\n  render() {\r\n    const { setUrlToIframe, selectedViewport } = this.state;\r\n    const viewportValue = viewports.find(\r\n      (item) => item.selector === selectedViewport\r\n    );\r\n\r\n    return (\r\n      <div className=\"responsive-test-container\">\r\n        <div className=\"row\">\r\n          <form className=\"col-sm-8\">\r\n            <label htmlFor=\"url\">Enter URL</label>\r\n            <div className=\"input-group shadow-sm\">\r\n              <input\r\n                id=\"url\"\r\n                type=\"text\"\r\n                placeholder=\"https://...\"\r\n                className=\"form-control rounded-0\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-outline-secondary rounded-0\"\r\n                  type=\"button\"\r\n                  id=\"button-addon2\"\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  Inspect\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <span className=\"font-weight-light font-italic font-smaller\">\r\n              Please enter full URL e.g: https://google.com\r\n            </span>\r\n          </form>\r\n\r\n          <div className=\"col-sm-4\">\r\n            <label htmlFor=\"url\">Select Viewport</label>\r\n            <select\r\n              className=\"form-control rounded-0 shadow-sm\"\r\n              value={selectedViewport}\r\n              onChange={this.handleViewportChange}\r\n            >\r\n              {viewports.map((item, index) => (\r\n                <option key={index} value={item.selector}>\r\n                  {item.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`frame ${setUrlToIframe ? \"loader\" : \"\"}`}>\r\n          <iframe\r\n            title=\"frame\"\r\n            ref={this.iframeRef}\r\n            id=\"web-frame\"\r\n            src={setUrlToIframe}\r\n            frameBorder=\"0\"\r\n            width={viewportValue && viewportValue.width}\r\n            height={viewportValue && viewportValue.height}\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <nav className=\"navbar sticky-top navbar-white bg-white border-bottom mb-3\">\r\n      <div className=\"d-flex justify-content-between w-100\">\r\n        <p className=\"navbar-brand\">Responsiveness Testing Tool</p>\r\n\r\n        <div className=\"ml-auto mt-2\">\r\n          <a\r\n            className=\"donate-button\"\r\n            href=\"https://www.paypal.me/codewithghazi\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Buy me a Coffee\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => (\r\n  <footer className=\"fixed-bottom\">\r\n    <nav className=\"navbar bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <p className=\"m-auto\">\r\n          © {new Date().getFullYear()},\r\n          <span>\r\n            Created with <span className=\"footer-love\">&hearts;</span> by\r\n          </span>\r\n          <a\r\n            href=\"https://www.codewithghazi.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Code With Ghazi\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </nav>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { useEffect } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport ResponsiveTest from \"./modules/ResponsiveTest\";\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    ReactGA.initialize(\"UA-164384148-1\");\r\n    ReactGA.pageview(window.location.pathname + window.location.search);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container-fluid\">\r\n        <ResponsiveTest />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap-reboot.min.css\";\r\n\r\nimport \"jquery/dist/jquery.min\";\r\nimport \"popper.js/dist/popper.min\";\r\nimport \"bootstrap/dist/js/bootstrap.min\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}